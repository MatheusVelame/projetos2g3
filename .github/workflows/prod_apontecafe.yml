# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - apontecafe

on:
  push:
    branches:
      - prod
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://user:password@localhost:5432/test_db

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: |
          cd projeto/
          pip install -r requirements.txt
          npm ci
          cd ..

      - name: Run migrations
        run: |
          python manage.py migrate

      - name: Create superuser
        env:
          DJANGO_SUPERUSER_USERNAME: admin
          DJANGO_SUPERUSER_PASSWORD: 123
          DJANGO_SUPERUSER_EMAIL: admin@example.com
        run: |
          echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('${{ env.DJANGO_SUPERUSER_USERNAME }}', '${{ env.DJANGO_SUPERUSER_EMAIL }}', '${{ env.DJANGO_SUPERUSER_PASSWORD }}')" | python manage.py shell

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Run local server and Cypress tests
        run: |
          cd projeto/
          python manage.py migrate
          python manage.py runserver &
          sleep 5
          npx cypress run

      - name: Cleaning testing files
        run: |
          cd projeto/
          [ -f .env ] && rm .env
          [ -f db.sqlite3 ] && rm db.sqlite3
          [ -f cypress.config.js ] && rm cypress.config.js
          [ -f package-lock.json ] && rm package-lock.json
          [ -f package.json ] && rm package.json
          [ -d cypress ] && rm -rf cypress
          [ -d node_modules ] && rm -rf node_modules
           cd ..
             
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: |
          cd projeto/
          zip release.zip ./* -r
          cd ..
          mv projeto//release.zip .

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_86BDDBA5475E434BB35FFDB5AAD48566 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C54A2BE1B6BA4E9BA428A1020D5ED922 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_C6C323119E2D4ED0813B80BCAA1DE7D2 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'apontecafe'
          slot-name: 'Production'
          
